import axios from 'axios';

let handler = async (m, { conn, text, usedPrefix, command }) => {
    if (!text) return conn.reply(m.chat, `üö© Ingrese el nombre del elemento qu√≠mico.\n\nEjemplo:\n> *${usedPrefix + command}* Magnesium`, m, rcanal);

    await m.react('üïì');

    try {
        const response = await axios.get(`https://delirius-apiofc.vercel.app/tools/table?element=${encodeURIComponent(text)}`);
        const { status, data } = response.data.elementData;

        if (!status) {
            return conn.reply(m.chat, `üòû No se pudo encontrar informaci√≥n sobre el elemento "${text}".`, m);
        }

        const { name, symbol, atomic_number, atomic_mass, period, phase, discovered_by, description, image } = data;

        let txt = '`‰πÇ  I N F O R M A C I √ì N -  E L E M E N T O`\n\n';
        txt += `  ‚ú©   Nombre : ${name}\n`;
        txt += `  ‚ú©   S√≠mbolo : ${symbol}\n`;
        txt += `  ‚ú©   N√∫mero At√≥mico : ${atomic_number}\n`;
        txt += `  ‚ú©   Masa At√≥mica : ${atomic_mass}\n`;
        txt += `  ‚ú©   Per√≠odo : ${period}\n`;
        txt += `  ‚ú©   Fase : ${phase}\n`;
        txt += `  ‚ú©   Descubierto por : ${discovered_by}\n`;
        txt += `  ‚ú©   Descripci√≥n : ${description}\n`;
        txt += `  ‚ú©   Imagen : ${image}\n\n`;

        conn.reply(m.chat, txt, m, rcanal);
        await m.react('‚úÖ');
    } catch (error) {
        console.error(error);
        await m.react('‚úñÔ∏è');
        conn.reply(m.chat, `Error al obtener informaci√≥n del elemento.`, m);
    }
};

handler.help = ['elemento <nombre>'];
handler.tags = ['tools'];
handler.command = ['discordelemento', 'infoelementodc', 'dcelement'];
handler.register = true;

export default handler;